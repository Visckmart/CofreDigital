import javax.swing.*;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JPasswordField;
import javax.swing.text.Document;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

public class TecladoFoneticoPanel extends JPanel {
    
    JButton[] keys = new JButton[6];
    
    public TecladoFoneticoPanel(JPanel next) {
        this.setLayout(null);

        this.prepararCampoDeSenha(275, 100, 150, 40);
        this.prepararBotoes(150, 180, 400, 115);
        this.prepararBotaoLogin(285, 400, 130, 35, next);
        
        JTextPane pane = new JTextPane();
        pane.setBounds(257, 50, 185, 35);
        SimpleAttributeSet attributeSet = new SimpleAttributeSet();  
  
        // Set the attributes before adding text  
        pane.setCharacterAttributes(attributeSet, true);  
        pane.setText("");  
  
        attributeSet = new SimpleAttributeSet();  
        StyleConstants.setForeground(attributeSet, Color.gray);
  
        try {
            StyledDocument doc = pane.getStyledDocument();  
            doc.insertString(doc.getLength(), "••••••••", attributeSet);  
            
            attributeSet = new SimpleAttributeSet();  
            StyleConstants.setForeground(attributeSet, Color.DARK_GRAY);
            doc = pane.getStyledDocument();  
            doc.insertString(doc.getLength(), "••••", attributeSet); 

            doc = pane.getStyledDocument(); 
            SimpleAttributeSet center = new SimpleAttributeSet();
            StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
            doc.setParagraphAttributes(0, doc.getLength(), center, false);
            
            pane.setFont(new Font(null, Font.PLAIN, 25));
            pane.setBackground(Color.black);
            pane.setForeground(Color.white);
        } catch (Exception e) {

        }
        add(pane);
        String[] z = {"X", "Y", "NO-TA-10", "J", "K", "L"};
        this.atualizarBotoes(z);
      }

    private void prepararCampoDeSenha(int offsetX, int offsetY, int width, int height) {
        JPasswordField feedbackField = new JPasswordField();
        feedbackField.setBounds(offsetX, offsetY, width, height);
        feedbackField.setText("abz");
        feedbackField.setFont(new Font(null, Font.PLAIN, 25));
        feedbackField.setEditable(false);
        feedbackField.setBackground(Color.darkGray);
        feedbackField.setForeground(Color.white);
        // feedbackField.setBorder(null);
        feedbackField.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        add(feedbackField);
    }
    
    private void prepararBotoes(int xOffset, int yOffset, int width, int height) {
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 3; j++) {
                JButton botao = new JButton(Integer.toString(i * 3 + j));
                botao.setFont(new Font(null, Font.PLAIN, 17));
                botao.setBounds(xOffset + (width/3) * j, yOffset + (height/2) * i, width/3 - 5, height/2 - 5);
                botao.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // frame.setContentPane(p2);
                        // frame.invalidate();
                        // frame.validate();
                    }
                });
                this.keys[i * 3 + j] = botao;
                this.add(botao);
            }
        }
    }
    
    void prepararBotaoLogin(int offsetX, int offsetY, int width, int height, JPanel next) {
        JButton loginButton = new JButton("Continuar   >");
        loginButton.setBounds(offsetX, offsetY, width, height);
        loginButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(loginButton);
                frame.setContentPane(next);
                frame.invalidate();
                frame.validate();
            }
        });
        this.add(loginButton);
    }
    void atualizarBotoes(String[] fonemas) {
        assert fonemas.length == keys.length : "Atualização de botões não contém o número correto de fonemas";
        for (int i = 0; i < keys.length; i++) {
            keys[i].setText(fonemas[i]);
        }
    }
  }
